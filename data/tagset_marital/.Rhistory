"CPS OCCUPATION 1980 CODE L1 2000",
"ATTEND TRN OR OJT TRN SIN DLI 2000",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2000",
"AMT SP REC'D 1999 FROM WAGES 2000",
"TOTAL NET FAMILY INCOME 2000",
"MARITAL STATUS 2000",
"DID SCHL CONSIDER R FT/PT L1 2002",
"INDUSTRY (2000 CODES) ALL JOB L1 2002",
"OCCUPATION (2000 CODES) ALL JOB L1 2002",
"ATTEND TRN OR OJT TRN SIN DLI 2002",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2002",
"AMT R WAGES > $15K 2002",
"R 2001 WAGES NEAREST $10K 2002",
"R 2001 WAGES LOW SELF-RANGE 2002",
"R 2001 WAGES HI SELF-RANGE 2002",
"AMT SP REC'D 2001 FROM WAGES 2002",
"SP-PAR 2001  WAGES- > ENTRY AMT 2002",
"SP-PAR 2001 WAGES- > $15K 2002",
"SP-PAR 2001 WAGES NEAREST $10K 2002",
"SP 2001 WGS LOW SELF-RANGE 2002",
"SP 2001 WGS HI SELF-RANGE 2002",
"TOTAL NET FAMILY INCOME 2002",
"MARITAL STATUS 2002",
"AMT R WAGES > $50K 2002",
"SP-PAR 2001 WAGES- > $50K 2002",
"DID SCHL CONSIDER R FT/PT L1 2004",
"INDUSTRY (2000 CODES) ALL JOB L1 2004",
"OCCUPATION (2000 CODES) ALL JOB L1 2004",
"ATTEND TRN OR OJT TRN SIN DLI 2004",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2004",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2004",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2004",
"AMT R WAGES > $15K 2004",
"AMT R WAGES > $50K 2004",
"AMT SPAR RECD 2003 FROM WAGES 2004",
"AMT SPAR RECD 2003 FROM WAGES 2004",
"AMT SPAR RECD 2003 FROM WAGES 2004",
"SPAR 2003  WAGES- > ENTRY AMT 2004",
"SPAR 2003 WAGES- > $15K 2004",
"SPAR 2003 WAGES- > $50K 2004",
"TOTAL NET FAMILY INCOME 2004",
"MARITAL STATUS 2004",
"DID SCHL CONSIDER R FT/PT L1 2006",
"INDUSTRY (2000 CODES) ALL JOB L1 2006",
"OCCUPATION (2000 CODES) ALL JOB L1 2006",
"ATTEND TRN OR OJT TRN SIN DLI 2006",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2006",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2006",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2006",
"AMT R WAGES > $15K 2006",
"AMT R WAGES > $50K 2006",
"AMT SP REC'D 2005 FROM WAGES 2006",
"AMT SP REC'D 2005 FROM WAGES 2006",
"AMT SP REC'D 2005 FROM WAGES 2006",
"SP-PAR 2005  WAGES- > ENTRY AMT 2006",
"SP-PAR 2005 WAGES- > $15K 2006",
"SP-PAR 2005 WAGES- > $50K 2006",
"TOTAL NET FAMILY INCOME 2006",
"MARITAL STATUS 2006",
"DID SCHL CONSIDER R FT/PT L1 2008",
"INDUSTRY (2000 CODES) ALL JOB L1 2008",
"OCCUPATION (2000 CODES) ALL JOB L1 2008",
"ATTEND TRN OR OJT TRN SIN DLI 2008",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2008",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2008",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2008",
"AMT R WAGES > $15K 2008",
"AMT R WAGES > $50K 2008",
"AMT SP REC'D 2007 FROM WAGES 2008",
"AMT SP REC'D 2007 FROM WAGES 2008",
"AMT SP REC'D 2007 FROM WAGES 2008",
"SP-PAR 2007  WAGES- > ENTRY AMT 2008",
"SP-PAR 2007 WAGES- > $15K 2008",
"SP-PAR 2007 WAGES- > $50K 2008",
"TOTAL NET FAMILY INCOME 2008",
"MARITAL STATUS 2008",
"DID SCHL CONSIDER R FT/PT L1 2010",
"INDUSTRY (2000 CODES) ALL JOB L1 2010",
"OCCUPATION (2000 CODES) ALL JOB L1 2010",
"ATTEND TRN OR OJT TRN SIN DLI 2010",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2010",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2010",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2010",
"AMT R WAGES > $15K 2010",
"AMT R WAGES > $50K 2010",
"AMT SP REC'D 2009 FROM WAGES 2010",
"AMT SP REC'D 2009 FROM WAGES 2010",
"AMT SP REC'D 2009 FROM WAGES 2010",
"SP-PAR 2009  WAGES- > ENTRY AMT 2010",
"SP-PAR 2009 WAGES- > $15K 2010",
"SP-PAR 2009 WAGES- > $50K 2010",
"TOTAL NET FAMILY INCOME 2010",
"MARITAL STATUS 2010",
"DID SCHL CONSIDER R FT/PT L1 2012",
"INDUSTRY (2000 CODES) ALL JOB L1 2012",
"OCCUPATION (2000 CODES) ALL JOB L1 2012",
"ATTEND TRN OR OJT TRN SIN DLI 2012",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2012",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2012",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2012",
"AMT R WAGES > $15K 2012",
"AMT R WAGES > $50K 2012",
"AMT SP REC'D 2009 FROM WAGES 2012",
"AMT SP REC'D 2009 FROM WAGES 2012",
"AMT SP REC'D 2009 FROM WAGES 2012",
"SP-PAR 2011  WAGES- > ENTRY AMT 2012",
"SP-PAR 2011 WAGES- > $15K 2012",
"SP-PAR 2011 WAGES- > $50K 2012",
"TOTAL NET FAMILY INCOME 2012",
"MARITAL STATUS 2012"
)
qnames = function(data) {
names(data) = c("CASEID_1979","Q3-24_1_1979","SCHOOL-25_1_1979","WOW-4_1979","WOW-OCC_1979","CPSIND70_1979","CPSOCC70_1979","Q8-18_1979","Q13-5_1979","Q13-18_1979","INCOME-24_1979","EXP-1_1979","EXP-OCC_1979","EXP-1A_1979","EXP-OCC_2_1979","EXP-2_1979","EXP-2A_1979","EXP-2B_1979","EXP-2B_1_1979","EXP-10B_1979","SAMPLE_RACE_1979","SAMPLE_SEX_1979","MARSTAT-KEY_1979","TNFI_TRUNC_1979","Q3-24_1_1980","CPSIND70_1980","TRN-4_1980","Q13-5_1980","Q13-18_1980","INCOME-24_1980","EXP-1_1980","EXP-2_1980","MARSTAT-KEY_1980","TNFI_TRUNC_1980","Q3-24_1_1981","CPSIND70_1981","TRN-4_1981","Q13-5_1981","Q13-18_1981","INCOME-24_1981","EXP-1_1981","EXP-2_1981","TNFI_TRUNC_1981","MARSTAT-KEY_1981","Q3-24_1_1982","CPSIND70_1982","Q8-18_1982","Q13-5_TRUNC_REVISED_1982","Q13-18_TRUNC_REVISED_1982","INCOME-24_1982","EXP-1_1982","EXP-OCC_1982","EXP-1A_1982","EXP-OCC_2_1982","EXP-2_1982","EXP-2A_1982","ESP-2B_1982","ESP-2B_1_1982","CPSOCC80_1982","MARSTAT-KEY_1982","TNFI_TRUNC_1982","Q3-24_1_1983","CPSIND70_1983","CPSOCC80_1983","Q8-18_1983","Q13-5_TRUNC_REVISED_1983","Q13-18_TRUNC_REVISED_1983","EXP-1_1983","EXP-2_1983","TNFI_TRUNC_1983","MARSTAT-KEY_1983","Q3-24_1_1984","CPSIND70_1984","CPSOCC80_1984","Q8-18_1984","Q13-5_TRUNC_REVISED_1984","Q13-18_TRUNC_REVISED_1984","EXP-1_1984","EXP-2_1984","TNFI_TRUNC_1984","MARSTAT-KEY_1984","Q3-24_1_1985","CPSIND70_1985","CPSOCC80_1985","Q8-18_1985","Q13-5_TRUNC_REVISED_1985","Q13-18_TRUNC_REVISED_1985","TNFI_TRUNC_1985","MARSTAT-KEY_1985","Q3-24.01_1986","CPSIND70_1986","CPSOCC80_1986","Q8-18_1986","Q13-5_TRUNC_REVISED_1986","Q13-18_TRUNC_REVISED_1986","TNFI_TRUNC_1986","MARSTAT-KEY_1986","CPSIND70_1987","CPSOCC80_1987","Q13-5_TRUNC_REVISED_1987","Q13-18_TRUNC_REVISED_1987","TNFI_TRUNC_1987","MARSTAT-KEY_1987","Q3-24_1_1988","CPSIND70_1988","CPSOCC80_1988","Q13-5_TRUNC_REVISED_1988","Q13-18_TRUNC_REVISED_1988","TNFI_TRUNC_1988","MARSTAT-KEY_1988","Q3-24_1_1989","CPSIND70_1989","CPSOCC80_1989","Q8-18_1989","Q13-5_TRUNC_REVISED_1989","Q13-18_TRUNC_REVISED_1989","TNFI_TRUNC_1989","MARSTAT-KEY_1989","Q3-24_1_1990","CPSIND70_1990","CPSOCC80_1990","Q8-18_1990","Q13-5_TRUNC_REVISED_1990","Q13-18_TRUNC_REVISED_1990","Q11-97_REVISED_1990","TNFI_TRUNC_1990","MARSTAT-KEY_1990","CPSIND70_1991","CPSOCC80_1991","Q8-18_1991","Q13-5_TRUNC_REVISED_1991","Q13-18_TRUNC_REVISED_1991","Q11-97_REVISED_1991","TNFI_TRUNC_1991","MARSTAT-KEY_1991","Q3-24_1_1992","CPSIND70_1992","CPSOCC80_1992","Q8-18_1992","Q13-5_TRUNC_REVISED_1992","Q13-18_TRUNC_REVISED_1992","Q11-97_REVISED_1992","TNFI_TRUNC_1992","MARSTAT-KEY_1992","Q3-24.01_1993","CPSIND70_1993","CPSOCC80_1993","Q8-18_1993","R4295101_REVISED_1993","R4314401_REVISED_1993","R4390801_REVISED_1993","TNFI_TRUNC_1993","MARSTAT-KEY_1993","Q3-24.1_1994","CPSOCC80_1994","INDALL-EMP.01_1994","Q8-18_1994","Q13-5_TRUNC_REVISED_1994","Q13-18_TRUNC_REVISED_1994","TNFI_TRUNC_1994","MARSTAT-KEY_1994","TNFI_TRUNC_1996","MARSTAT-KEY_1996","Q3-24.01_1996","INDALL-EMP.01_1996","CPSOCC80_1996","Q8-18_1996","Q13-5_TRUNC_REVISED_1996","Q13-18_TRUNC_REVISED_1996","Q3-24.01_1998","Q8-18_1998","Q13-5_TRUNC_REVISED_1998","Q13-18_TRUNC_REVISED_1998","INDALL-EMP.01_1998","OCCALL-EMP.01_1998","CPSOCC80_1998","TNFI_TRUNC_1998","MARSTAT-KEY_1998","Q3-24.01_2000","INDALL-EMP.01_2000","OCCALL-EMP.01_2000","CPSOCC80.01_2000","Q8-18_2000","Q13-5_TRUNC_REVISED_2000","Q13-18_TRUNC_REVISED_2000","TNFI_TRUNC_2000","MARSTAT-KEY_2000","Q3-24.01_2002","INDALL-EMP.01_2002","OCCALL-EMP.01_2002","Q8-18_2002","Q13-5_TRUNC_2002","Q13-5_B_2002","Q13-5_D_2002","Q13-5_E~000001_2002","Q13-5_E~000002_2002","Q13-18_TRUNC_2002","Q13-18_A_2002","Q13-18_B_2002","Q13-18_D_2002","Q13-18_E~000001_2002","Q13-18_E~000002_2002","TNFI_TRUNC_2002","MARSTAT-KEY_2002","Q13-5_C_2002","Q13-18_C_2002","Q3-24.01_2004","INDALL-EMP.01_2004","OCCALL-EMP.01_2004","Q8-18_2004","Q13-5_TRUNC_2004","Q13-5_SR000001_2004","Q13-5_SR000002_2004","Q13-5_UAB_B_2004","Q13-5_UAB_C_2004","Q13-18_TRUNC_2004","Q13-18_SR000001_TRUNC_2004","Q13-18_SR000002_TRUNC_2004","Q13-18_UAB_A_2004","Q13-18_UAB_B_2004","Q13-18_UAB_C_2004","TNFI_TRUNC_2004","MARSTAT-KEY_2004","Q3-24.01_2006","INDALL-EMP.01_2006","OCCALL-EMP.01_2006","Q8-18_2006","Q13-5_TRUNC_2006","Q13-5_SR000001_TRUNC_2006","Q13-5_SR000002_TRUNC_2006","Q13-5_UAB_B_2006","Q13-5_UAB_C_2006","Q13-18_TRUNC_2006","Q13-18_SR000001_2006","Q13-18_SR000002_TRUNC_2006","Q13-18_UAB_A_2006","Q13-18_UAB_B_2006","Q13-18_UAB_C_2006","TNFI_TRUNC_2006","MARSTAT-KEY_2006","Q3-24.01_2008","INDALL-EMP.01_2008","OCCALL-EMP.01_2008","Q8-18_2008","Q13-5_TRUNC_2008","Q13-5_SR000001_TRUNC_2008","Q13-5_SR000002_TRUNC_2008","Q13-5_UAB_B_2008","Q13-5_UAB_C_2008","Q13-18_TRUNC_2008","Q13-18_SR000001_TRUNC_2008","Q13-18_SR000002_TRUNC_2008","Q13-18_UAB_A_2008","Q13-18_UAB_B_2008","Q13-18_UAB_C_2008","TNFI_TRUNC_2008","MARSTAT-KEY_2008","Q3-24.01_2010","INDALL-EMP.01_2010","OCCALL-EMP.01_2010","Q8-18_2010","Q13-5_TRUNC_2010","Q13-5_SR000001_TRUNC_2010","Q13-5_SR000002_TRUNC_2010","Q13-5_UAB_B_2010","Q13-5_UAB_C_2010","Q13-18_TRUNC_2010","Q13-18_SR000001_TRUNC_2010","Q13-18_SR000002_TRUNC_2010","Q13-18_UAB_A_2010","Q13-18_UAB_B_2010","Q13-18_UAB_C_2010","TNFI_TRUNC_2010","MARSTAT-KEY_2010","Q3-24.01_2012","INDALL-EMP.01_2012","OCCALL-EMP.01_2012","Q8-18_2012","Q13-5_TRUNC_2012","Q13-5_SR000001_2012","Q13-5_SR000002_2012","Q13-5_UAB_B_2012","Q13-5_UAB_C_2012","Q13-18_TRUNC_2012","Q13-18_SR000001_TRUNC_2012","Q13-18_SR000002_TRUNC_2012","Q13-18_UAB_A_2012","Q13-18_UAB_B_2012","Q13-18_UAB_C_2012","TNFI_TRUNC_2012","MARSTAT-KEY_2012")
return(data)
}
View(new_data)
View(new_data)
dat_use = as.data.frame(na.omit(new_data))
View(dat_use)
View(new_data)
dat_use = as.data.frame(na.rm(new_data))
dat_use = as.data.frame(na.exclude (new_data))
dat_use = as.data.frame(na.contiguous (new_data))
dat_use = as.data.frame(na.fail(new_data))
rm(dat_use)
qnames = function(data) {
names(data) <- c("CASEID_1979","SAMPLE_RACE_1979","SAMPLE_SEX_1979","INCOME-24_1980","Q13-5_1981","Q13-5_TRUNC_REVISED_1982","Q13-5_TRUNC_REVISED_1983","Q13-5_TRUNC_REVISED_1984","Q13-5_TRUNC_REVISED_1985","Q13-5_TRUNC_REVISED_1986","Q13-5_TRUNC_REVISED_1987","Q13-5_TRUNC_REVISED_1988","Q13-5_TRUNC_REVISED_1989","CPS-114_000003_1990","Q13-5_TRUNC_REVISED_1990","Q13-5_TRUNC_REVISED_1991","Q13-5_TRUNC_REVISED_1992","R4295101_REVISED_1993","Q13-5_TRUNC_REVISED_1996","Q13-5_TRUNC_REVISED_1998","Q13-5_TRUNC_REVISED_2000","Q13-5_TRUNC_2002","Q13-5_TRUNC_2004","Q13-5_TRUNC_2006","Q13-5_TRUNC_2010","Q13-5_TRUNC_2012")
return(data)
}
varlabels <- c(    "ID# (1-12686) 79",
"RACL/ETHNIC COHORT /SCRNR 79",
"SEX OF R 79",
"TOT INC WAGES AND SALRY 79 80 NO",
"TOT INC WAGES AND SALRY P-C YR 81",
"TOT INC WAGES AND SALRY P-C YR 82 (TRUNC)",
"TOT INC WAGES AND SALRY P-C YR 83 (TRUNC)",
"TOT INC WAGES AND SALRY P-C YR 84 (TRUNC)",
"TOT INC WAGES AND SALRY P-C YR 85 (TRUNC)",
"TOT INC WAGES AND SALRY P-C YR 86 (TRUNC)",
"TOT INC WAGES AND SALRY P-C YR 87 (TRUNC)",
"TOT INC WAGES AND SALRY P-C YR 88 (TRUNC)",
"TOT INC WAGES AND SALRY P-C YR 89 (TRUNC)",
"POSITN CPS PROMO NOT REQ > ED/CLASS 90",
"TOT INC WAGES AND SALRY P-C YR 90 (TRUNC)",
"TOT INC WAGES AND SALRY P-C YR 91",
"TOT INC WAGES AND SALRY P-C YR 92 (TRUNC)",
"AMT OF R'S WAGES/SALARY/TIPS (PCY) 93 (TRUNC)",
"AMT OF R'S WAGES/SALARY/TIPS (PCY) 96",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 1998",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2000",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2002",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2004",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2006",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2010",
"AMT OF RS WAGES/SALARY/TIPS (PCY) 2012"
)
new_data <- qnames(new_data)
categories <- qnames(categories)
categories <- vallabels(new_data)
categories <- qnames(categories)
categories <- vallabels(new_data)
function (x, name, value)
{
cl <- oldClass(x)
class(x) <- NULL
nrows <- .row_names_info(x, 2L)
if (!is.null(value)) {
N <- NROW(value)
if (N > nrows)
stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (N < nrows)
if (N > 0L && (nrows%%N == 0L) && length(dim(value)) <=
1L)
value <- rep(value, length.out = nrows)
else stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (is.atomic(value) && !is.null(names(value)))
names(value) <- NULL
}
x[[name]] <- value
class(x) <- cl
return(x)
}
categories <- qnames(categories)
categories <- vallabels(new_data)
function (x, name, value)
{
cl <- oldClass(x)
class(x) <- NULL
nrows <- .row_names_info(x, 2L)
if (!is.null(value)) {
N <- NROW(value)
if (N > nrows)
stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (N < nrows)
if (N > 0L && (nrows%%N == 0L) && length(dim(value)) <=
1L)
value <- rep(value, length.out = nrows)
else stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (is.atomic(value) && !is.null(names(value)))
names(value) <- NULL
}
x[[name]] <- value
class(x) <- cl
return(x)
}
function (x, name, value)
{
cl <- oldClass(x)
class(x) <- NULL
nrows <- .row_names_info(x, 2L)
if (!is.null(value)) {
N <- NROW(value)
if (N > nrows)
stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (N < nrows)
if (N > 0L && (nrows%%N == 0L) && length(dim(value)) <=
1L)
value <- rep(value, length.out = nrows)
else stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (is.atomic(value) && !is.null(names(value)))
names(value) <- NULL
}
x[[name]] <- value
class(x) <- cl
return(x)
}
new_data <- qnames(new_data)
categories <- qnames(categories)
categories <- vallabels(new_data)
new_data <- read.table('tagset_income.dat', sep=' ')
setwd("~/Downloads/tagset_income")
categories <- vallabels(new_data)
function (x, name, value)
{
cl <- oldClass(x)
class(x) <- NULL
nrows <- .row_names_info(x, 2L)
if (!is.null(value)) {
N <- NROW(value)
if (N > nrows)
stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (N < nrows)
if (N > 0L && (nrows%%N == 0L) && length(dim(value)) <=
1L)
value <- rep(value, length.out = nrows)
else stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (is.atomic(value) && !is.null(names(value)))
names(value) <- NULL
}
x[[name]] <- value
class(x) <- cl
return(x)
}
categories <- qnames(categories)
categories <- vallabels(new_data)
new_data <- qnames(new_data)
categories <- qnames(categories)
qnames = function(data) {
names(data) <- c("CASEID_1979","SAMPLE_RACE_1979","SAMPLE_SEX_1979","INCOME-24_1980","Q13-5_1981","Q13-5_TRUNC_REVISED_1982","Q13-5_TRUNC_REVISED_1983","Q13-5_TRUNC_REVISED_1984","Q13-5_TRUNC_REVISED_1985","Q13-5_TRUNC_REVISED_1986","Q13-5_TRUNC_REVISED_1987","Q13-5_TRUNC_REVISED_1988","Q13-5_TRUNC_REVISED_1989","CPS-114_000003_1990","Q13-5_TRUNC_REVISED_1990","Q13-5_TRUNC_REVISED_1991","Q13-5_TRUNC_REVISED_1992","R4295101_REVISED_1993","Q13-5_TRUNC_REVISED_1996","Q13-5_TRUNC_REVISED_1998","Q13-5_TRUNC_REVISED_2000","Q13-5_TRUNC_2002","Q13-5_TRUNC_2004","Q13-5_TRUNC_2006","Q13-5_TRUNC_2010","Q13-5_TRUNC_2012")
return(data)
}
vallabels = function(data) {
data$R0214700 <- factor(data$R0214700, levels=c(1.0,2.0,3.0), labels=c("HISPANIC","BLACK","NON-BLACK, NON-HISPANIC"))
data$R0214800 <- factor(data$R0214800, levels=c(1.0,2.0), labels=c("MALE","FEMALE"))
data$R0328000 <- cut(data$R0328000, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R0482600 <- cut(data$R0482600, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R0782101 <- cut(data$R0782101, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R1024001 <- cut(data$R1024001, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R1410701 <- cut(data$R1410701, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R1778501 <- cut(data$R1778501, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R2141601 <- cut(data$R2141601, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R2350301 <- cut(data$R2350301, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R2722501 <- cut(data$R2722501, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R2971401 <- cut(data$R2971401, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R3132600 <- factor(data$R3132600, levels=c(1.0,2.0,3.0), labels=c("HIGHER EDUCATIONAL DEGREE","MORE COURSE WORK OR CLASS","NEITHER"))
data$R3279401 <- cut(data$R3279401, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R3559001 <- cut(data$R3559001, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R3897101 <- cut(data$R3897101, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R4295101 <- cut(data$R4295101, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9999999.0), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 9999999: 50000+"), right=FALSE)
data$R5626201 <- cut(data$R5626201, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9.9999999E7), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 99999999: 50000+"), right=FALSE)
data$R6364601 <- cut(data$R6364601, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9.9999999E7), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 99999999: 50000+"), right=FALSE)
data$R6909701 <- cut(data$R6909701, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9.9999999E7), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 99999999: 50000+"), right=FALSE)
data$R7607800 <- cut(data$R7607800, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9.9999999E7), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 99999999: 50000+"), right=FALSE)
data$R8316300 <- cut(data$R8316300, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9.99999999E8), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 999999999: 50000+"), right=FALSE)
data$T0912400 <- cut(data$T0912400, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9.9999999E7), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 99999999: 50000+"), right=FALSE)
data$T3045300 <- cut(data$T3045300, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9.9999999E7), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 99999999: 50000+"), right=FALSE)
data$T3977400 <- cut(data$T3977400, c(0.0,1.0,1000.0,2000.0,3000.0,4000.0,5000.0,6000.0,7000.0,8000.0,9000.0,10000.0,15000.0,20000.0,25000.0,50000.0,9.9999999E7), labels=c("0","1 TO 999","1000 TO 1999","2000 TO 2999","3000 TO 3999","4000 TO 4999","5000 TO 5999","6000 TO 6999","7000 TO 7999","8000 TO 8999","9000 TO 9999","10000 TO 14999","15000 TO 19999","20000 TO 24999","25000 TO 49999","50000 TO 99999999: 50000+"), right=FALSE)
return(data)
}
categories <- vallabels(new_data)
function (x, name, value)
{
cl <- oldClass(x)
class(x) <- NULL
nrows <- .row_names_info(x, 2L)
if (!is.null(value)) {
N <- NROW(value)
if (N > nrows)
stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (N < nrows)
if (N > 0L && (nrows%%N == 0L) && length(dim(value)) <=
1L)
value <- rep(value, length.out = nrows)
else stop(sprintf(ngettext(N, "replacement has %d row, data has %d",
"replacement has %d rows, data has %d"), N, nrows),
domain = NA)
if (is.atomic(value) && !is.null(names(value)))
names(value) <- NULL
}
x[[name]] <- value
class(x) <- cl
return(x)
}
rm(list= ls(all=T))
library("NlsyLinks", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
read.csv(tagset_income.csv, header = T)
read.csv("tagset_income.csv", header = T)
as.data.frame(read.csv("tagset_income.csv", header = T))
age_dat <- read.csv("tagset_age.csv", header = T)
age_dat <- read.csv("tagset_age.csv", header = T)
income_dat <- read.csv("tagset_income.csv", header = T)
occu_dat <- read.csv("tagset_occu.csv", header = T)
getwd()
setwd("~/Downloads/tagset_age")
age_dat <- read.csv("tagset_age.csv", header = T)
setwd("~/Downloads/tagset_occu")
occu_dat <- read.csv("tagset_occu.csv", header = T)
setwd("~/Downloads/tagset_tenure")
tenure_dat <- read.csv("tagset_tenure.csv", header = T)
setwd("~/Downloads/tagset_educ")
setwd("~/Downloads/"tagset_educ")
setwd("~/Downloads/tagset_tenure")
setwd("~/Downloads/tagset_marital")
marital_dat <- read.csv("tagset_marital.csv", header = T)
setwd("~/Downloads/tagset_educ")
educ_dat <- read.csv("tagset_educ.csv", header = T)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by="R0000100")
View(age_dat)
View(income_dat)
View(marital_dat)
View(tenure_dat)
View(educ_dat)
View(age_dat)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by=[,1] )
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by= "[,1]" )
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by= "[,]" )
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat )
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by = dat_all[, -1])
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by = dat_all[,])
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by = dat_all[,max])
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by = income_dat[,1])
dat_use = as.data.frame(na.fail(new_data))
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by = income_dat[,1])
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by = income_dat[,1:26])
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by = dat_all[,1:26])
getwd()
setwd("~/Downloads/tagset_age-2")
age_dat <- read.csv("tagset_age-2.csv", header = T)
age_dat <- read.csv("tagset_age.csv", header = T)
setwd("~/Downloads/tagset_income")
income_dat <- read.csv("tagset_income.csv", header = T)
setwd("~/Downloads/tagset_occu")
setwd("~/Downloads/tagset_occu-2")
setwd("~/Downloads/tagset_occu-3")
occu_dat <- read.csv("tagset_occu.csv", header = T)
setwd("~/Downloads/tagset_tenure-2")
tenure_dat <- read.csv("tagset_tenure.csv", header = T)
setwd("~/Downloads/tagset_educ-2")
educ_dat <- read.csv("tagset_educ.csv", header = T)
setwd("~/Downloads/tagset_marital-2")
marital_dat <- read.csv("tagset_marital.csv", header = T)
View(tenure_dat)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by="R0000100")
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by= R0000100)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat)
dat_all <- merge.data.frame(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat)
dat_all <- merge.data.frame(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, all = T)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by= R0000100, incomparables = NA)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by.y = R0000100, incomparables = NA)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by.x  = R0000100, incomparables = NA)
dat_all <- merge(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat, by.x  = "R0000100", incomparables = NA)
dat_all <- data.frame(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat)
View(dat_all)
dat_all[dat_all == -1] = NA  # Refused
dat_all[dat_all == -2] = NA  # Dont know
dat_all[dat_all == -3] = NA  # Invalid missing
dat_all[dat_all == -4] = NA  # Valid missing
dat_all[dat_all == -5] = NA  # Non-interview
View(dat_all)
dat_all = as.data.frame(na.omit(dat_all))
View(dat_all)
dat_all <- data.frame(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat)
View(dat_all)
dat_all[dat_all == -1] = NA  # Refused
dat_all[dat_all == -2] = NA  # Dont know
dat_all[dat_all == -3] = NA  # Invalid missing
dat_all[dat_all == -4] = NA  # Valid missing
dat_all[new_data == -5] = NA  # Non-interview
dat_all[dat_all == -1] = NA  # Refused
dat_all[dat_all == -2] = NA  # Dont know
dat_all[dat_all == -3] = NA  # Invalid missing
dat_all[dat_all == -4] = NA  # Valid missing
dat_all[dat_all == -5] = NA  # Non-interview
View(dat_all)
(dat_all[1:12686,] = na.omit(dat_all))
(dat_all[1:12686, 2:163] = na.omit(dat_all))
dat_use <- complete.cases(dat_all)
dat_good <- complete.cases(dat_all)
dat_use <- subset(dat_all, dat_good)
dat_good <- stopifnot(complete.cases(dat_all))
dat_good <- stopifnot(complete.cases(dat_all) !=is.na(dat_all))
dat_good <- stopifnot(complete.cases(dat_all) =is.na(dat_all))
dat_good <- stopifnot(complete.cases(dat_all) is.na(dat_all))
dat_good <- stopifnot(complete.cases(dat_all) = is.na(dat_all))
na.omit(dat_all)
warning()
warnings()
View(dat_all)
na.omit(dat_all$T3966200)
View(dat_all)
View(dat_all)
dat_all =na.exclude(dat_all$T3966200)
dat_use <-dat_all =na.exclude(dat_all$T3966200)
dat_use = dat_all =na.exclude(dat_all$T3966200)
dat_good <- as.data.frame(dat_all =na.exclude(dat_all$T3966200))
dat_all =na.exclude(dat_all$T3966200)
dat_all =na.exclude(dat_all)
dat_all =na.exclude(dat_all)
dat_all <- data.frame(age_dat, income_dat, occu_dat, tenure_dat, educ_dat, marital_dat)
dat_good = as.data.frame(na.exclude(dat_all))
dat_good = as.data.frame(na.exclude(dat_all$T3966200))
dat_good = as.data.frame(na.exclude(dat_all))
View(dat_good)
dat_all[dat_all == -1] = NA  # Refused
dat_all[dat_all == -2] = NA  # Dont know
dat_all[dat_all == -3] = NA  # Invalid missing
dat_all[dat_all == -4] = NA  # Valid missing
dat_all[dat_all == -5] = NA  # Non-interview
dat_good = as.data.frame(na.exclude(dat_all))
dat_good = as.data.frame(na.exclude(dat_all$T3966200))
dat_use <- subset(dat_all,dat_good)
dat_good = na.exclude(dat_all$T3966200)
dat_use <- subset(dat_all, dat_good)
dat_use <- subset(dat_all, na.exclude(dat_all$T3966200))
dat_good <- na.exclude(dat_all$T3966200)
dat_use = subset(dat_all, dat_good)
dat_good <- as.data.fram(na.exclude(dat_all$T3966200))
dat_good <- as.data.frame(na.exclude(dat_all$T3966200))
dat_use = subset(dat_all, dat_good)
dat_use = subset.data.frame(dat_all, dat_good)
dat_use = subset.data.frame(dat_all, select = dat_all$T3966200)
dat_use = subset.data.frame(dat_all, select = dat_good)
dat_use = subset.data.frame(dat_all, select = dat_good[,])
View(dat_use)
dat_use = subset.data.frame(dat_all, select = dat_good[,1])
dat_use = subset.data.frame(dat_all, dat_good[,1])
dat_use = subset.data.frame(dat_all, dat_good, drop = T)
dat_good <- na.exclude(dat_all$T3966200)
dat_use = subset.data.frame(dat_all, dat_good)
dat_use = subset(dat_all, select = c(dat_all, dat_good))
dat_use = subset(dat_all, c(dat_all, dat_good))
attach(dat_all)
dat_good <- na.exclude(dat_all$T3966200)
dat_use = subset(dat_all, dat_good)
dat_good <- (dat_all$T3966200, na.omit=T)
dat_good <- (dat_all$T3966200 na.omit=T)
dat_good = (dat_all$T3966200, na.omit=T)
dat_good = (dat_all$T3966200 == na.omit=T)
dat_good = (dat_all$T3966200 = na.omit=T)
dat_good = (dat_all$T3966200, na.omit=T)
dat_good = na.omit(dat_all$T3966200)
dat_good = na.exclude(dat_all$T3966200)
dat_good <- na.exclude(dat_all$T3966200)
dat_good <- subset(dat_all, na.exclude(dat_all$T3966200))
View(dat_all)
dat_good <- as.data.frame(dat_all =na.exclude(dat_all$T3966200))
dat_good <- as.data.frame(na.exclude(dat_all$T3966200)
dat_good <- as.data.frame(na.exclude(dat_all$T3966200)
dat_good <- na.exclude(dat_all$T3966200)
dat_good = na.omit(dat_all$T3966200)
na.omit(dat_all$T3966200)
na.exclude(dat_all$T3966200)
as.atomic(na.exclude(dat_all$T3966200))
as.numeric(na.exclude(dat_all$T3966200))
as.vector(na.exclude(dat_all$T3966200))
dat_good <- as.data.frame(dat_all =na.exclude(dat_all$T3966200))
dat_good = as.data.frame(na.exclude(dat_all$T3966200))
dat_good
dat_good = as.data.frame(na.exclude(dat_all$T3966200))
dat_good
dat_use = subset(dat_all, dat_good)
dat_good <- subset(dat_all, na.exclude(dat_all$T3966200))
View(dat_good)
